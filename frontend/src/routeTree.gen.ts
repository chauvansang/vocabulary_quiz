/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutLeaderboardImport } from './routes/_layout/leaderboard'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutQuizzesJoinImport } from './routes/_layout/quizzes/join'
import { Route as LayoutQuizzesInteractionImport } from './routes/_layout/quizzes/interaction'
import { Route as LayoutAdminUsersImport } from './routes/_layout/admin/users'
import { Route as LayoutAdminQuizzesImport } from './routes/_layout/admin/quizzes'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLeaderboardRoute = LayoutLeaderboardImport.update({
  path: '/leaderboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutQuizzesJoinRoute = LayoutQuizzesJoinImport.update({
  path: '/quizzes/join',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutQuizzesInteractionRoute = LayoutQuizzesInteractionImport.update({
  path: '/quizzes/interaction',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminUsersRoute = LayoutAdminUsersImport.update({
  path: '/admin/users',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminQuizzesRoute = LayoutAdminQuizzesImport.update({
  path: '/admin/quizzes',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/leaderboard': {
      preLoaderRoute: typeof LayoutLeaderboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/quizzes': {
      preLoaderRoute: typeof LayoutAdminQuizzesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin/users': {
      preLoaderRoute: typeof LayoutAdminUsersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/quizzes/interaction': {
      preLoaderRoute: typeof LayoutQuizzesInteractionImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/quizzes/join': {
      preLoaderRoute: typeof LayoutQuizzesJoinImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutItemsRoute,
    LayoutLeaderboardRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutAdminQuizzesRoute,
    LayoutAdminUsersRoute,
    LayoutQuizzesInteractionRoute,
    LayoutQuizzesJoinRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
